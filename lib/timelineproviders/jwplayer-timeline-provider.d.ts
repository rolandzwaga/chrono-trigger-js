import { IResolvedEngineConfiguration } from '../configuration/types';
import { IEventbus } from '../eventbus/types';
import { TResultCallback } from '../types';
import { ITimelineProvider } from './types';
export declare class JwPlayerTimelineProvider implements ITimelineProvider {
    private eventbus;
    private config;
    private _paused;
    private _player;
    private _currentLoopHandler;
    private _eventbusListeners;
    private _playlist;
    private _videoElementId;
    loop: boolean;
    constructor(eventbus: IEventbus, config: IResolvedEngineConfiguration);
    _extractUrls(configuration: IResolvedEngineConfiguration): string[];
    init(): Promise<any>;
    _handlePlayerReady(resolve: (value: any | PromiseLike<any>) => void): void;
    _handlePlayerComplete(): void;
    _seekedHandler(): void;
    destroy(): void;
    _loopHandler(floor: (x: number) => number, jwplayerEvent: any): void;
    _timeResetLoopHandler(): void;
    _addEventListeners(): void;
    _container(resultCallback: TResultCallback): void;
    toggleplay(): void;
    start(): void;
    stop(): void;
    pause(): void;
    seek(position: number): void;
    resize(width: number, height: number): void;
    duration(resultCallback: TResultCallback): void;
    playlistItem(uri: string): void;
    getPosition(): any;
    getPlaylistIndex(): any;
    getState(): any;
    getDuration(): any;
    getMute(): any;
    getVolume(): any;
    setMute(state: boolean): void;
    setVolume(volume: number): void;
}
